@if $load-typesetted {
  //==============================================================================
  // Default Type Styles
  //==============================================================================

  // Stops devices from scaling up text.
  @include typesettingsInit();

  body {
    margin: 0;
    padding: 0;
    font-family: $font-sans;
    font-weight: 400;
    color: tint($text-color, 35%);
    font-size: 2rem;
    overflow-x: hidden;
  }

  h1, .h1,
  h2, .h2,
  h3, .h3,
  h4, .h4,
  h5, .h5,
  h6, .h6 {
    margin-top: 0;
    padding-top: 0;
    padding-bottom: 0;
    font-family: $font-sans;
    font-weight: 400;
    color: $black;
    line-height: 1.2;
  }

  // [1] Applies a margin bottom that is a multiple of the vertical grid in EMs.
  // The first argument is the font size context and the second is multiple of the
  // vertical grid unit.
  // [2] Sets the type to one of the modular scale values and the second argument
  // sets a unitless line-height as a multiple of the vertical grid.
  // [3] A generic media query for tablet size ranges.
  // [4] Applies a margin bottom that is the same vertical grid value as the mobile
  // first rule.
  // [5] Sets the type to one of the modular scale values and the second argument
  // sets a unitless line-height as a multiple of the vertical grid.
  h1, .h1 {
    position: relative;
    margin-bottom: emRhythm(4, $ms-up2); // [1]
    @include for-tablet-landscape-up {
      // [3]
      margin-bottom: emRhythm(5, $ms-up3); // [4]
      @include setType(6, $ms-up3); // [5]
    }

    @include for-desktop-up {
      margin-bottom: emRhythm(6, $ms-up3);
      @include setType(7, $ms-up3);
    }
    // &.page-title {
    //   &:after {
    //     content: "";
    //     position: absolute;
    //     display: block;
    //     background: tint($purple, 20%);
    //     height: .4rem;
    //     width: 2.5rem;
    //     margin: .5rem 0 0;
    //   }
    //   @include for-tablet-landscape-up {
    //     &:after {
    //       height: .6rem;
    //       width: 3rem;
    //       margin: 1rem 0 0;
    //     }
    //   }

    //   @include for-desktop-up {
    //     &:after {
    //       height: .6rem;
    //       width: 4rem;
    //     }
    //   }
    // }
  }

  h2, .h2 {
    margin-bottom: emRhythm(1, $ms-up1);
    @include setType(5, $ms-up1);

    @include for-tablet-landscape-up {
      margin-bottom: emRhythm(1, $ms-up2);
      @include setType(6, $ms-up2)
    }

    @include for-desktop-up {
      margin-bottom: emRhythm(1, $ms-up2);
      @include setType(6, $ms-up2);
    }
  }

  h3, .h3 {
    margin-bottom: emRhythm(1, $ms-up1);
    @include setType(5, $ms-up1);

    @include for-desktop-up {
      margin-bottom: emRhythm(1, $ms-up2);
      @include setType(6, $ms-up2);
    }
  }

  h4, .h4 {
    margin-bottom: emRhythm(1, $ms-up1);
    @include setType(5, $ms-up1);
  }

  h5, .h5,
  h6, .h6 {
    margin-bottom: emRhythm(1);
    @include setType(4);
  }

  p {
    margin-top: 0;
    margin-bottom: emRhythm($base-line-multi);
    padding-top: 0;
    padding-bottom: 0;
    max-width: emRhythm(96);
  }

  // @if $paragraph-indent {
  //   p + p {
  //     margin-top: emRhythm($base-line-multi * -1);
  //     text-indent: emRhythm($base-line-multi);
  //   }
  // }

  small,
  .font-small {
    @include setType(3, $ms-down1);
  }

  em {
    font-style: italic;
  }

  strong {
    font-weight: bold;
  }

  blockquote {
    margin-top: emRhythm(4);
    margin-bottom: emRhythm(4);
    margin-left: 0;
    padding-top: 0;
    padding-bottom: 0;
    padding-left: emRhythm(4);
    border-left: $base-vertical-unit solid lighten(#000, 50%);
    font-family: $font-serif;

    p {
      margin-bottom: emRhythm(2);
    }

    footer {
      cite {
        &:before {
          content: " â€“ ";
        }
      }
    }
  }

  pre,
  code {
    font-family: $font-mono;
  }

  time,
  .time {
    text-transform: uppercase;
  }

  ol,
  ul,
  dl {
    margin-top: 0;
    margin-bottom: emRhythm(4);
    margin-left: emRhythm(4);
    padding-top: 0;
    padding-bottom: 0;
  }

  ul ul,
  ol ol,
  dl dl {
    margin-left: 0;
  }

  ul {
    list-style: disc;
  }

  ol {
    list-style: decimal;
  }

  // [1] https://developer.mozilla.org/en-US/docs/CSS/font-variant
  abbr {
    font-variant: small-caps; // [1]
    font-weight: 600;
    text-transform: lowercase;
  }

  // Cursor changed to a question mark when it has a title
  abbr[title]:hover {
    cursor: help;
  }

  // Creates horizontal rules that obey the baseline.
  // [1] Zero outs the user agent border
  hr {
    margin-top: emRhythm(4);
    margin-bottom: 0;
    border: none; // [1]
    border-top-color: $text-color;
    border-top-style: solid;
    @include rhythmBorderTop(1px, 4);
  }

  // Anchors
  #main a {
    text-decoration: none;
    position: relative;
    color: tint($purple, 30%);
    &:after {
      content: "";
      position: absolute;
      bottom: 0;
      left: 0;
      height: 2px;
      width: 0;
      background: $purple;
      transition: .3s ease-in-out;
    }
    &:link {
      color: tint($purple, 20%);
    }
    &:visited {
      color: tint($purple, 20%);
    }
    &:hover {
      &:after {
        width: 100%;
        background: $purple;
      }
    }
    &:active {
      color: tint($purple, 40%);
    }
  }
}
